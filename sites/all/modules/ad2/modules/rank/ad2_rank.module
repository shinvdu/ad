<?

/**
 * 
 * this mosule responsible for
 * a. bid entery 
 * b. score calculation
 * c. rank calculation
 * d. 
 */


function _ad2_rank_menu(){
// 	
  // $items["ad2/%ad/bids"] = array(
    // 'title' => 'מחיר להקלקה לפי קטגוריה',
    // 'page callback' => 'drupal_get_form',
    // 'page arguments' => array('had_bids_bids_form' ,  1),
    // 'access callback' =>  'had_bids_access_tab',
    // 'access arguments' => array(1, 'bids'),
    // 'type' => MENU_LOCAL_TASK,
    // 'file' => 'had_bids.pages.inc',
    // 'weight' => 50,
  // );


// 	
  // $items["admin/reports/had/autobids"] = array(
    // 'title' => 'מחירים אוטומטיים',
    // 'page callback' => 'had_bids_report_auto',
    // 'access arguments' => array('administer advertisements'),
    // 'type' => MENU_LOCAL_TASK,
    // 'file' => 'had_bids.admin.inc',
    // //'weight' => 50,
  // );


	return $items;
}
// 
// function had_bids_access_tab($node , $tab ){
// 	
	// global $user;
// 	
	// $type = is_string($node) ? $node : $node->type;
// 	
	// switch ($tab) {
		// case 'bids':
			// if( in_array($type, had_money_get_node_types() ) ){
				// //return ( user_access('edit any advertisement') || node_access('edit' , $node) );
				// return ( user_access('edit any advertisement') || (user_access('edit own ' . $type . ' content') && ($user->uid == $node->uid)) );
			// }
			// break;
// 	
		// default:
			// return false;
			// break;
	// }
	// return false;
// }


function ad2_rank_get_node_tids( $node ){

	$tids = array();
	if( isset($node->field_tags['und']) ){
		foreach ($node->field_tags['und'] as $delta => $value) {
			$tids[] = $value['tid'];
		}
	}
	
	foreach ( array('zone' , 'area' , 'settlement') as $n ) {
		if( isset($node->{"field_" . $n}['und'][0]['tid']))
			$tids[] = $node->{"field_" . $n}['und'][0]['tid'];
	}
	
	return $tids;
}



function ad2_rank_entity_insert($entity, $type){
	
	if( $type == 'ad2'){
		
		
		$bundles = ad2_clickprice_bundles();
		
		if( in_array($entity->type, $bundles)  ){
			
			$entity = ad2_load($entity->aid);
			
			$parent = $entity->ad_parent;
			
			$tids = ad2_rank_get_node_tids( $parent );
			
			
			
			//$auto = isset( $parent->field_auto_campaign['und'][0]['value'] ) ? $parent->field_auto_campaign['und'][0]['value'] : 0;
		
			$bid = isset( $parent->field_click_price['und'][0]['value'])  ? $parent->field_click_price['und'][0]['value'] : ad2_clickprice_get_default_click_price();
			$bid = $bid >= ad2_clickprice_get_default_click_price() ? $bid : ad2_clickprice_get_default_click_price(); 
		
			$score = 1;
			
			foreach ($tids as $tid ) {
				if( $tid ){
					db_insert('ad2_rank')
						->fields(array(
							'aid' => $entity->aid,
							'nid' => $parent->nid,
							'tid' => $tid,
							'bid' => $bid, 
							'rank' => $score * $bid,
							'score' => $score,
							'status' => 1,
							//'auto' => $auto,
							//'auto_manual' => -1,
							'rerank' => 1,
						)) 
						->execute()
						;
				}
			}
		}
		
	}
}


function ad2_rank_entity_update($entity, $type){
	if( $type == 'ad2'){
		
	}
}


function ad2_rank_node_delete($node){
	
	if( $node->type == 'site'){
		db_delete('ad2_rank')
			->condition('nid' , $node->nid )
			->execute()
			;
	}
}


function ad2_rank_node_update($node){
	
	global $user;
		
	// update ad_bids with site categories
	if( $node->type == 'site'){

		/**
		 * first check if the site categories where changed
		 */
		$original = $node->original;
		
		$tids_new = ad2_rank_get_node_tids($node);
		$tids_old = ad2_rank_get_node_tids($node->original);
		
		/**
		 * if old has something that new does not have add old to delete list
		 */
		$delete = array();
		foreach ($tids_old as $tid ) {
			if( ! in_array($tid , $tids_new ) ){
				$delete[] = $tid;	
			}
		}
		
		/**
		 * if new has something that old does not have add new to add list
		 */
		$add = array();
		foreach ($tids_new as $tid ) {
			if( ! in_array($tid , $tids_old ) ){
				$add[] = $tid;	
			}
		}
		
		//tr( $add );
		//tr( $delete );
		
		$query = new EntityFieldQuery();
		$query->entityCondition('entity_type', 'ad2')
				->entityCondition('bundle', ad2_clickprice_bundles() , 'IN')
				//->propertyCondition('status', 1)
				->fieldCondition(AD2_SITE_FIELD, 'nid', $node->nid, '=')
				//->fieldCondition('field_photo', 'fid', 'NULL', '!=')
				//->fieldCondition('field_faculty_tag', 'tid', $value)
				//->fieldCondition('field_news_publishdate', 'value', $year. '%', 'like')
				//->range(0, 10)
				//->addMetaData('account', user_load(1))
				; // run the query as user 1

		$result = $query->execute();
		$aids = array();
		if (isset($result['ad2'])) {
		  $aids = array_keys($result['ad2']);
		  //$news_items = entity_load('node', $news_items_nids);
		}

		//tr( $aids );
		//die();

		// $s = db_select('ad2' , 'a')
			// ->fields('a' , array('aid'))
			// ->condition('nid' , $node->nid )
			// ->condition('type' , had_money_get_node_types() , 'IN' )
			// ;
// 			
		// $aids = $s->execute()->fetchCol();
		
		if( count($delete) && count($aids)){
			$q = db_delete('ad2_rank')
				->condition('aid' , $aids , 'IN' )
				->condition('tid' , $delete , 'IN' )
				;
			$r = $q->execute();
			
			if( $user->uid == 1)
			drupal_set_message(t('נמחקו @num שורות מטבלת מחירי הקלקה למודעות' , array('@num' => $r)) );
		}
		
		if( count($add) && count($aids) ){
			
			$ads = ad2_load_multiple($aids);
			
			$items = array();
			
			// todo: few correction here
			foreach ($ads as $aid => $ad ) {
				foreach ($add as $tid) {
					$items[] = array(
						'aid' => $aid,
						'nid' => $node->nid,
						'tid' => $tid,
						'bid' => 1, //$ad->ad->price, //field_click_price['und'][0]['value'],
						'rank' => 1,
						'score' => 1,
						'status' => 1,
						'rerank' => 1,
						//'auto' => folow ad policy 
					);
				}
			}
			
					
			foreach ($items as $item) {
				$query = db_insert('ad2_rank')
					->fields(array('aid', 'nid' , 'tid', 'bid', 'rank' , 'score' , 'status' , 'rerank'))
					->values($item)
					;
				$id = $query->execute();
							

				if( $user->uid == 1  )
					drupal_set_message('נוספה שורה לטבלת מחירי הקלקה למודעות');
				
			}
		}
	}
	
}



// maybe there is no need to load all
function _ad2_rank_node_load($nodes, $types){
	//return;
	
	
	$sites_ads_bids = &drupal_static(__FUNCTION__, array()  );
	
	foreach ($nodes as $node ) {
		if( in_array($node->type, had_money_get_node_types() ) ) {
			if( isset($sites_ads_bids[$node->nid]) ){
				$node->bids = $sites_ads_bids[$node->nid];
			} else {
				$rows = db_query("select * from ad_bids where aid = :aid" , array(':aid' => $node->nid) )->fetchAll();
				foreach ($rows as $row ) {
					$sites_ads_bids[$row->aid][$row->tid] = (array) $row;
				}
				//$sites_ads_bids[$node->nid] = (array) $row;
				$node->bids = $sites_ads_bids[$node->nid];
			}
		}
	}
// 	
	// $sites_ads_bids = &drupal_static(__FUNCTION__, array()  );
// 	
	// $intersect = array_intersect( $types ,   had_money_get_node_types() );
// 	
	// if( count($intersect) ){
		// if( count($sites_ads_bids) == 0 ){
			// $rows = db_query("select * from ad_bids")->fetchAll();
// 		
			// foreach ($rows as $row ) {
				// $sites_ads_bids[$row->aid][$row->tid] = (array) $row;
			// }
// 			
		// }
// 		
		// foreach ($nodes as $node ) {
			// if( isset($sites_ads_bids[$node->nid]) ){
				// $node->bids = $sites_ads_bids[$node->nid];
			// }
		// }
	// }
}


function ad2_rank_entity_delete($entity, $type){
	if( $type == 'ad2'){
		db_delete('ad2_rank')
			->condition('aid' , $entity->aid )
			->execute()
			;
	}
}


// 
// function had_bids_theme($existing, $type, $theme, $path) {
// 	
  // return array(
	// 'had_bids_bids_form' => array(
      // 'file' => 'had_bids.pages.inc',
      // 'render element' => 'form', 
    // ),
  // );
// }


// 
// 
// function _had_bids_caculate_auto_bids($node){
// 	
	// $site = node_load($node->ad->nid);
// 	
	// if( $site->status ){
// 		
		// $roof = $site->roof ? $site->roof : 0.001;
// 		
		// $base = 1.2;
		// $max = 10;
// 		
		// foreach (_had_auto_default_values_info() as $row ) {
			// if( $roof >= $row['min'] && $roof < $row['max'] ){
				// $base = $row['bid'];
				// $max = $row['bid_max'];
			// }
		// }
		// //tr( "base = " . $base );
// 				
		// $done = -1 *  account_balance_spending_today($node->ad->nid);
		// if( $done == 0 ) $done = 0.01;
		// //tr( "done = " . $done );
// 		
		// $p =  $done / $roof;
		// //tr( "done/roof = " . $p );
// 				
		// $hours = _had_auto_clicks_by_hour_info();
		// $h = date('G');
		// //tr( "hour = " . $h );
// 		
		// $a = $hours[$h] /100;
		// //tr( "hour factor = " . $a );
// 				
		// $q = $a / $p;
		// //tr( "hour factor /  (done/roof )= " . $q );
// 				
		// $bid2 = $q * $base;
// 		
		// if( $bid2 > $max){
			// $bid2 = $max;
		// }
// // 		
		// // if( $bid2 < 1.2 ){
			// // $bid2 = 1.2;
		// // }
// // 		
// 		
		// if( $bid2 < 0.9 ){
			// $bid2 = 0.9;
		// }
// 		
		// return $bid2;
// 	
	// } else {
		// return 15;
	// }
// 		
// }



// update the ranks of the node
// function had_bids_rank($node){
// 	
	// /**
	 // * go over all terms in node
	 // */
	// if( in_array( $node->type , had_money_get_node_types()) ){
// 
		// $rows = array();
// 		
		// foreach ($node->bids as $tid => $row ) {
// 				
			// $row['rank_original'] = $row['rank'];
// 			
			// $row['rank'] = round(  $row['bid'] * $row['score'] , 4);
// 			
			// if( $row['rank_original']  != $row['rank'] ){
// 				
				// db_update('ad_bids')
					// ->condition('aid' , $node->nid )
					// ->condition('tid' , $tid )
					// ->fields(array(
						// 'rank' 	=> $row['rank'],
					// ))
					// ->execute()
					// ;
// 					
				// $node->bids[$tid]['rank'] = $row['rank'];
			// }
// 			
		// }
	// }
// 	
// }


// update the ranks of the node
// function had_bids_update_rank($node){
// 	
	// //go over all terms in node
	// if( in_array( $node->type , had_money_get_node_types()) ){
// 
		// $rows = array();
		// foreach ($node->bids as $tid => $row ) {
			// $node->bids[$tid]['rank'] = round(  $row['bid'] * $row['score'] , 4);
		// }
// 
	// }
// 	
// }



// function _had_auto_default_values_info(){
	// $autobids = variable_get('had_autobids_table' , array());
	// return $autobids;
// }

// 
// function _had_auto_clicks_by_hour_info(){
// 	
	// return array(
		// 0 => 0,
		// 1 => 3.7,
		// 2 => 5.57,
		// 3 => 6.47,
		// 4 => 6.99,
		// 5 => 7.34,
		// 6 => 7.66,
		// 7 => 8.38,
		// 8 => 10.1,
		// 9 => 13.19,
		// 10 =>17.9,
		// 11 =>23.6,
		// 12 =>29.7,
		// 13 =>35.78,
		// 14 =>41.9,
		// 15 =>48.14,
		// 16 =>54.05,
		// 17 =>59.74,
		// 18 =>65.43,
		// 19 =>71.19,
		// 20 =>76.5,
		// 21 =>82.3,
		// 22 =>87.6,
		// 23 =>93.9,
		// 24 =>100,
	// );
// }
